x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2025-01-20T14-49-07Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: JABA_SUPER_USER_MINIO
    MINIO_ROOT_PASSWORD: jaba127!368601NO
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  db1.lan: #cb
    image: couchbase:7.6.2
    container_name: db1.lan
    hostname: db1.lan
    ports:
      - "8091:8091"    # Management Port
      - "8092:8092"    # Internal Cluster Manager Port
      - "8093:8093"    # Query Service Port
      - "8094:8094"    # Full Text Search (FTS) Port
      - "8095:8095"    # Analytics Service Port
      - "8096:8096"    # Eventing Service Port
      - "8097:8097"    # Backup Service Port
      - "9102:9102"    # Index Service Port
      - "11210:11210"  # Data Service Port
      - "11219:11211"  # Memcached Data Service Port
    networks:
      - couchbase-net
    environment:
      - COUCHBASE_USER=jaba_admin
      - COUCHBASE_PASSWORD=jaba_pwd
      - COUCHBASE_BUCKET=doom-scrolling
    volumes:
      - ./volumes/couchbase-1:/opt/couchbase/var

  db2.lan:
      image: couchbase:7.6.2
      container_name: db2.lan
      hostname: db2.lan
      ports:
        - "9081:8091"    # Management Port (different external port)
        - "9082:8092"    # Internal Cluster Manager Port
        - "9083:8093"    # Query Service Port
        - "9084:8094"    # Full Text Search (FTS) Port
        - "9085:8095"    # Analytics Service Port
        - "9086:8096"    # Eventing Service Port
        - "9087:8097"    # Backup Service Port
        - "9103:9102"    # Index Service Port
        - "11211:11210"  # Data Service Port (different external port)
      networks:
        - couchbase-net
      environment:
        - COUCHBASE_USER=jaba_admin
        - COUCHBASE_PASSWORD=jaba_pwd
        - COUCHBASE_BUCKET=doom-scrolling
      volumes:
        - ./volumes/couchbase-2/couchbase-data2:/opt/couchbase/var
  db3.lan:
      image: couchbase:7.6.2
      container_name: db3.lan
      hostname: db3.lan
      ports:
        - "10091:8091"   # Management Port (different external port)
        - "10092:8092"   # Internal Cluster Manager Port
        - "10093:8093"   # Query Service Port
        - "10094:8094"   # Full Text Search (FTS) Port
        - "10095:8095"   # Analytics Service Port
        - "10096:8096"   # Eventing Service Port
        - "10097:8097"   # Backup Service Port
        - "9104:9102"    # Index Service Port
        - "11212:11210"  # Data Service Port (different external port)
      networks:
        - couchbase-net
      environment:
        - COUCHBASE_USER=jaba_admin
        - COUCHBASE_PASSWORD=jaba_pwd
        - COUCHBASE_BUCKET=doom-scrolling
      volumes:
        - ./volumes/couchbase-3:/opt/couchbase/var

  server1:
    image: ${NEO4J_DOCKER_IMAGE}

    hostname: server1

    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7474:7474"
      - "7687:7687"

    volumes:
      - ./configs/neof4j/neo4j.conf:/conf/neo4j.conf
      - ./configs/neof4j/data/server1:/data
      - ./configs/neof4j/logs/server1:/logs
      - ./configs/neof4j/conf/server1:/conf
      - ./configs/neof4j/import/server1:/import
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_initial_server_mode__constraint=PRIMARY

    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]

    user: ${USER_ID}:${GROUP_ID}

  server2:
    image: ${NEO4J_DOCKER_IMAGE}
    hostname: server2
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7475:7474"
      - "7688:7687"
    volumes:
      - ./configs/neof4j/neo4j.conf:/conf/neo4j.conf
      - ./configs/neof4j/data/server2:/data
      - ./configs/neof4j/logs/server2:/logs
      - ./configs/neof4j/conf/server2:/conf
      - ./configs/neof4j/import/server2:/import
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_initial_server_mode__constraint=PRIMARY
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
    user: ${USER_ID}:${GROUP_ID}

  server3:
    image: ${NEO4J_DOCKER_IMAGE}
    hostname: server3
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7476:7474"
      - "7689:7687"
    volumes:
      - ./configs/neof4j/neo4j.conf:/conf/neo4j.conf
      - ./configs/neof4j/data/server3:/data
      - ./configs/neof4j/logs/server3:/logs
      - ./configs/neof4j/conf/server3:/conf
      - ./configs/neof4j/import/server3:/import
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_initial_server_mode__constraint=PRIMARY
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
    user: ${USER_ID}:${GROUP_ID}

  server4:
    image: ${NEO4J_DOCKER_IMAGE}
    hostname: server4
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7477:7474"
      - "7690:7687"
    volumes:
      - ./configs/neof4j/neo4j.conf:/conf/neo4j.conf
      - ./configs/neof4j/data/server4:/data
      - ./configs/neof4j/logs/server4:/logs
      - ./configs/neof4j/conf/server4:/conf
      - ./configs/neof4j/import/server4:/import
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_initial_server_mode__constraint=SECONDARY
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
    user: ${USER_ID}:${GROUP_ID}

  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    hostname: zookeeper
    networks:
      clickhouse-network:
        ipv4_address: 172.23.0.10
  clickhouse01:
      image: clickhouse/clickhouse-server:22.5
      container_name: clickhouse01
      hostname: clickhouse01
      networks:
        clickhouse-network:
          ipv4_address: 172.23.0.11
      ports:
        - '127.0.0.1:8123:8123'
        - '127.0.0.1:9020:9000'
      volumes:
        - ./configs/clickhouse/clickhouse04:/etc/clickhouse-server
      depends_on:
        - zookeeper
  clickhouse02:
      image: clickhouse/clickhouse-server:22.5
      container_name: clickhouse02
      hostname: clickhouse02
      ports:
        - '127.0.0.1:8124:8123'
        - '127.0.0.1:9021:9000'
      networks:
        clickhouse-network:
          ipv4_address: 172.23.0.12
      volumes:
        - ./configs/clickhouse/clickhouse02:/etc/clickhouse-server
      depends_on:
        - zookeeper
  clickhouse03:
      image: clickhouse/clickhouse-server:22.5
      container_name: clickhouse03
      hostname: clickhouse03
      ports:
        - '127.0.0.1:8125:8123'
        - '127.0.0.1:9022:9000'
      networks:
        clickhouse-network:
          ipv4_address: 172.23.0.13
      volumes:
        - ./configs/clickhouse/clickhouse03:/etc/clickhouse-server
      depends_on:
        - zookeeper
  clickhouse04:
      image: clickhouse/clickhouse-server:22.5
      container_name: clickhouse04
      hostname: clickhouse04
      ports:
        - '127.0.0.1:8126:8123'
        - '127.0.0.1:9023:9000'
      networks:
        clickhouse-network:
          ipv4_address: 172.23.0.14
      volumes:
        - ./configs/clickhouse/clickhouse04:/etc/clickhouse-server
      depends_on:
        - zookeeper


  influxdb2:
    image: influxdb:2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: '0YVmO2e179ymcr4AZoA9FOEAIZSdDmezA8yIuLnSL4ERowgKZGKWEKqZAR64BCVn1aC4tN6Jq7aVM0ldAMZJIQ=='
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2


  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

secrets:
  influxdb2-admin-username:
    file: configs/influx-secrets/influxdb2-admin-username
  influxdb2-admin-password:
    file: configs/influx-secrets/influxdb2-admin-password
  influxdb2-admin-token:
    file: configs/influx-secrets/influxdb2-admin-token
volumes:
  influxdb2-data:
  influxdb2-config:
  dgraph:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
  clickhouse-network:
    name: clickhouse-network
    ipam:
      config:
        - subnet: 172.23.0.0/24
  neo4j-internal:
  couchbase-net:
    driver: bridge
  workshop:
    driver: bridge


